@startuml like-example
skinparam objectStyle class

' Like集約の具体例
object "太郎から花子へのいいね : Like" as like1 {
  いいねID = "like_001"
  送信者ユーザーID = "user_001"
  受信者ユーザーID = "user_002"
  作成日時 = "2025-09-29 14:30:00"
}

object "花子から太郎へのいいね : Like" as like2 {
  いいねID = "like_002"
  送信者ユーザーID = "user_002"
  受信者ユーザーID = "user_001"
  作成日時 = "2025-09-29 16:45:00"
}

' 参照先ユーザー（簡略表示）
object "田中太郎 : User" as user1 {
  ユーザーID = "user_001"
  名前 = "田中太郎"
}

object "佐藤花子 : User" as user2 {
  ユーザーID = "user_002"
  名前 = "佐藤花子"
}

' 参照関係（点線で表現）
like1 ..> user1 : 送信者
like1 ..> user2 : 受信者
like2 ..> user2 : 送信者
like2 ..> user1 : 受信者

note right of like1
  シナリオ 1：最初のいいね
  太郎が花子のプロフィールを閲覧
  「素敵な人だな、趣味は違うけど
  新しいことを教えてもらえそう」
  と思い、いいねを送信
  
  時刻：午後2時30分
end note

note right of like2
  シナリオ 2：いいね返し
  花子が太郎からのいいねに気づく
  太郎のプロフィールを確認
  「映画好きなんだ、私も好きだし
  落ち着いた人で良さそう」
  と思い、いいねを返す
  
  時刻：午後4時45分
  → この時点で相互いいね成立
end note

note top
  Like集約のビジネスルール：
  - 同じユーザーペアには1つのいいねのみ
  - 自分自身にはいいねできない
  - 相互いいねでマッチング成立の条件となる
end note

@enduml
